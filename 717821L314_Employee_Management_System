import java.sql.*;
import java.util.Scanner;
public class EmployeesDetails {
    private static Connection con;
    private static Statement st;
    private static ResultSet rs;
    private static PreparedStatement pst;
    private static ResultSetMetaData rsMetaData;
    private static Scanner ip = new Scanner(System.in);
    public static void create() throws ClassNotFoundException, SQLException {
        con=DriverManager.getConnection("jdbc:mysql://localhost:3306/basic","Arun","root");
        st = con.createStatement();
        st.execute("create table employees(EID int(5) PRIMARY KEY, FIRSTNAME varchar(25),LASTNAME varchar(25) NOT NULL ,EMAIL varchar(30) NOT NULL ,UNIQUE (email) ,PHONENUMBER varchar(10),HIREDATE DATE NOT NULL ,DEPARTMENT varchar(30) NOT NULL,JOB varchar(20) NOT NULL,SALARY int(8) NOT NULL)");
        System.out.println("Table is Created.....");
    }
    public static void insertValues(int noofemp) throws ClassNotFoundException, SQLException {
        con=DriverManager.getConnection("jdbc:mysql://localhost:3306/basic","Guna","root");
        pst = con.prepareStatement("insert into employees values(?,?,?,?,?,?,?,?,?)");
        for (int i = 0; i < noofemp; i++) {
            System.out.println("Enter the ID:");
            pst.setInt(1, ip.nextInt());
            System.out.println("Enter the FIRSTNAME:");
            pst.setString(2, ip.next());
            System.out.println("Enter the LASTNAME:");
            pst.setString(3, ip.next());
            System.out.println("Enter the Email Id:");
            pst.setString(4, ip.next());
            System.out.println("Enter the PhoneNumber:");
            pst.setString(5,ip.next());
            System.out.println("Enter the Hiredate in(YYYY-MM-DD):");
            pst.setDate(6,Date.valueOf(ip.next()));
            System.out.println("Enter the Department:");
            pst.setString(7,ip.next());
            System.out.println("Enter the Job:");
            pst.setString(8,ip.next());
            System.out.println("Enter the Salary:");
            pst.setInt(9,ip.nextInt());
            pst.executeUpdate();
        }
        System.out.println("Table is Inserted.....");
    }
    public static void deleteRecord(int id) throws ClassNotFoundException,
            SQLException {
        con=DriverManager.getConnection("jdbc:mysql://localhost:3306/basic","Arun","root");
        st = con.createStatement();
        st.executeUpdate("delete from employees where eid =" + id);
        System.out.println("Row is Deleted.....");
    }
    public static void showDetails() throws ClassNotFoundException, SQLException {
        con=DriverManager.getConnection("jdbc:mysql://localhost:3306/basic","Arun","root");
        st = con.createStatement();
        rs = st.executeQuery("select * from employees");
        while (rs.next())
            System.out.println(rs.getInt(1) + "\t\t" + rs.getString(2) + "\t\t" +
                    rs.getString(3)+"\t\t"+rs.getString(4)+"\t\t"+rs.getString(5)+"\t\t"+rs.getDate(6)+"\t\t"+rs.getString(7)+"\t\t"+rs.getString(8)+"\t\t"+rs.getInt(9));
    }
    public static void deleteTable() throws ClassNotFoundException, SQLException {
        con=DriverManager.getConnection("jdbc:mysql://localhost:3306/basic","Arun","root");
        st = con.createStatement();
        st.execute("drop table employees");
        System.out.println("Table is Dropped.....");
    }
    public static void deleteRows() throws ClassNotFoundException, SQLException {
        con=DriverManager.getConnection("jdbc:mysql://localhost:3306/basic","Arun","root");
        st = con.createStatement();
        st.execute("truncate table employees");
        System.out.println("Table Record has been Deleted.....");
    }
    public static void updateRecord() throws ClassNotFoundException, SQLException {
        con=DriverManager.getConnection("jdbc:mysql://localhost:3306/basic","Arun","root");
        st = con.createStatement();
        String str,data;
        int choice,id;
        System.out.println("Enter the id to update:");
        id=ip.nextInt();
        rs=st.executeQuery("select * from employees");
        rsMetaData=rs.getMetaData();
        for(int i=1;i<=9;i++) {
            System.out.println(i+"\t\t"+rsMetaData.getColumnName(i));
        }
        System.out.println("Enter the Choice :");
        choice=ip.nextInt();
        str=rsMetaData.getColumnName(choice);
        System.out.println("Enter the new data:");
        data=ip.next();
        if(choice==1 && choice==9) {
            st.executeUpdate("update employees set "+str+"="+data+" where eid="+id);
        }
        else {
            st.executeUpdate("update employees set "+str+"='"+data+"' where eid="+id);
        }
    }
    public static void showOption() {
        System.out.println("1\t\tCreating table"+"\n"+"2\t\tInserting the records"+"\n"+"3\t\tUpdating the Data"+"\n"+"4\t\tDeleting the Record"+"\n"+"5\t\tDeleting the Rows"+"\n"+"6\t\tDeleting the Table"+"\n"+"7\t\tDisplay the Data"+"\n"+"8\t\tQuit");
    }
    public static void main(String[] args) throws ClassNotFoundException, SQLException
    {
        showOption();
        while(true) {
            int choice;
            System.out.println("Enter the choice:");
            choice=ip.nextInt();
            switch(choice) {
                case 1:
                    create();
                    break;
                case 2:
                    System.out.println("Enter the Number of Record to be insert:");
                    insertValues(ip.nextInt());
                    break;
                case 3:
                    updateRecord();
                    break;
                case 4:
                    System.out.println("Enter the id to be deleted");
                    deleteRecord(ip.nextInt());
                    break;
                case 5:
                    deleteRows();
                    break;
                case 6:
                    deleteTable();
                    break;
                case 7:
                    showDetails();
                    break;
                case 8:
                    System.out.println("Thank You!!!!");
                    System.exit(0);
                    break;
                case 9:
                    showOption();
                    break;
                default:
                    System.out.println("Invalid choice....");
            }
        }
    }
}
